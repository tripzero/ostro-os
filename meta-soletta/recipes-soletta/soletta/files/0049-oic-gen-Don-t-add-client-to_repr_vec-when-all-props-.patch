From ac1a7c2ecc3c4e7fd7d2c64c4725b7ee67321adb Mon Sep 17 00:00:00 2001
From: Otavio Pontes <otavio.pontes@intel.com>
Date: Tue, 19 Apr 2016 15:06:35 -0300
Subject: [PATCH 49/50] oic-gen: Don't add client to_repr_vec when all props
 are readonly

Method generate_object_to_repr_vec_fn_common_c is not generating the
to_repr_vec functions when all props from one object are read only, but
this was not being checked in method object_to_repr_vec_fn_common_c.

If we generate a to_repr_vec function in object_to_repr_vec_fn_common_c
when all props are read only, we will try to call the to_repr_vec
function that was supposed to be generated by
generate_object_to_repr_vec_fn_common_c, so we will fail.

Signed-off-by: Otavio Pontes <otavio.pontes@intel.com>
---
 data/scripts/sol-oic-gen.py | 11 +++++++++++
 1 file changed, 11 insertions(+)

diff --git a/data/scripts/sol-oic-gen.py b/data/scripts/sol-oic-gen.py
index 229d002..c03e2e6 100755
--- a/data/scripts/sol-oic-gen.py
+++ b/data/scripts/sol-oic-gen.py
@@ -217,7 +217,18 @@ def get_type_from_property(prop):
         return 'enum:%s' % ','.join(prop['enum'])
     raise ValueError('Unknown type for property')
 
+def all_props_are_read_only(props):
+    for prop_name, prop_descr in props.items():
+        if not prop_descr['read_only']:
+            return False
+
+    return True
+
+
 def object_to_repr_vec_fn_common_c(state_struct_name, name, props, client, equivalent={}):
+    if client and all_props_are_read_only(props):
+        return '';
+
     for item_name, item_props in equivalent.items():
         if item_props[0] == client and props_are_equivalent(props, item_props[1]):
             return '''static bool
-- 
2.4.11

